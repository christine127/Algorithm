-- 루시와 엘라 찾기
SELECT ANIMAL_ID,NAME, SEX_UPON_INTAKE
from ANIMAL_INS 
where NAME in ("Lucy", "Ella", "Pickle", "Rogan", "Sabrina", "Mitty")
order by ANIMAL_ID asc;


-- 이름에 el이 들어가는 동물 찾기
SELECT animal_id, name
from animal_ins
where name like '%el%' and
animal_type = 'Dog'
order by name asc

-- 중성화 여부 파악하기
SELECT ANIMAL_ID , NAME, 
CASE 
    WHEN REGEXP_LIKE(SEX_UPON_INTAKE ,'Neutered|Spayed') THEN 'O'
    ELSE 'X'
END AS "중성화"
FROM ANIMAL_INS
ORDER BY ANIMAL_ID ASC;

-- 오랜 기간 보호한 동물(2)
SELECT *
FROM 
    (SELECT I.ANIMAL_ID, I.NAME
    FROM ANIMAL_INS I, ANIMAL_OUTS O
    WHERE I.ANIMAL_ID = O.ANIMAL_ID
    ORDER BY (O.DATETIME - I.DATETIME)  DESC)
WHERE ROWNUM <= 2
;

-- DATETIME에서 DATE로 형 변환
SELECT ANIMAL_ID, NAME, TO_CHAR(DATETIME,'YYYY-MM-DD') AS "날짜"
FROM ANIMAL_INS 
ORDER BY ANIMAL_ID ASC;

-- 없어진 기록 찾기
SELECT O.ANIMAL_ID, O.NAME
FROM ANIMAL_OUTS O
LEFT JOIN ANIMAL_INS I
ON O.ANIMAL_ID = I.ANIMAL_ID
WHERE I.ANIMAL_ID IS NULL
ORDER BY ANIMAL_ID ASC;

-- 오랜 기간 보호한 동물
SELECT *
FROM
    (SELECT I.NAME, I.DATETIME
    FROM ANIMAL_INS I 
    LEFT JOIN ANIMAL_OUTS O
    ON I.ANIMAL_ID = O.ANIMAL_ID
    WHERE O.ANIMAL_ID IS NULL
    ORDER BY I.DATETIME ASC)
WHERE ROWNUM <=3;

-- 보호소에서 중성화한 동물
SELECT I.ANIMAL_ID, I.ANIMAL_TYPE, I.NAME
FROM ANIMAL_INS I, ANIMAL_OUTS O
WHERE I.ANIMAL_ID = O.ANIMAL_ID
AND REGEXP_LIKE(I.SEX_UPON_INTAKE,'Intact')
AND REGEXP_LIKE(O.SEX_UPON_OUTCOME,'Spayed|Neutered')
ORDER BY I.ANIMAL_ID ASC

-- 중복 제거하기
SELECT COUNT(NAME)
FROM
    (SELECT DISTINCT NAME 
    FROM ANIMAL_INS);

SELECT COUNT(DISTINCT(name))
FROM animal_ins
WHERE name <> 'NULL';